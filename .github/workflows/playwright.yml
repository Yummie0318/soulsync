name: Playwright Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout code
        uses: actions/checkout@v5

      # 2Ô∏è‚É£ Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 20
          cache: 'npm'

      # 3Ô∏è‚É£ Install dependencies
      - name: Install dependencies
        run: npm ci

      # 4Ô∏è‚É£ Install Playwright and browsers
      - name: Install Playwright
        run: npx playwright install --with-deps

      # 5Ô∏è‚É£ Generate logged-in storage state (with GitHub Secrets)
      - name: Generate logged-in storage state
        run: |
          mkdir -p storage
          echo "üß™ Generating login session..."
          npx playwright test tests/Create-storage.spec.ts --workers=1
        env:
          NODE_ENV: test
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          TEST_EMAIL: ${{ secrets.TEST_EMAIL }}
          TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      # 6Ô∏è‚É£ Debug: verify storage file was created
      - name: Verify logged-in storage
        run: |
          echo "üìÅ Checking storage directory contents:"
          ls -l storage || echo "‚ö†Ô∏è No storage directory found!"

      # 7Ô∏è‚É£ Build Next.js app
      - name: Build Next.js
        run: npm run build
        env:
          NODE_ENV: production
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
          EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
          PUSHER_APP_ID: ${{ secrets.PUSHER_APP_ID }}
          PUSHER_KEY: ${{ secrets.PUSHER_KEY }}
          PUSHER_SECRET: ${{ secrets.PUSHER_SECRET }}
          PUSHER_CLUSTER: ${{ secrets.PUSHER_CLUSTER }}
          NEXT_PUBLIC_PUSHER_KEY: ${{ secrets.NEXT_PUBLIC_PUSHER_KEY }}
          NEXT_PUBLIC_PUSHER_CLUSTER: ${{ secrets.NEXT_PUBLIC_PUSHER_CLUSTER }}
          NEXT_PUBLIC_SOCKET_URL: ${{ secrets.NEXT_PUBLIC_SOCKET_URL }}

      # 8Ô∏è‚É£ Start Next.js server in background
      - name: Start Next.js
        run: |
          nohup npm run start > .next.log 2>&1 &
          echo $! > .next-server.pid
        env:
          NODE_ENV: production
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
          EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
          PUSHER_APP_ID: ${{ secrets.PUSHER_APP_ID }}
          PUSHER_KEY: ${{ secrets.PUSHER_KEY }}
          PUSHER_SECRET: ${{ secrets.PUSHER_SECRET }}
          PUSHER_CLUSTER: ${{ secrets.PUSHER_CLUSTER }}
          NEXT_PUBLIC_PUSHER_KEY: ${{ secrets.NEXT_PUBLIC_PUSHER_KEY }}
          NEXT_PUBLIC_PUSHER_CLUSTER: ${{ secrets.NEXT_PUBLIC_PUSHER_CLUSTER }}
          NEXT_PUBLIC_SOCKET_URL: ${{ secrets.NEXT_PUBLIC_SOCKET_URL }}

      # 9Ô∏è‚É£ Wait for app to start
      - name: Wait for app
        run: npx wait-on http://localhost:3000

      # üîü Run Playwright tests
      - name: Run Playwright tests
        run: |
          echo "üé≠ Running Playwright tests..."
          npx playwright test --workers=1 --reporter=html
        env:
          CI: true
          NODE_ENV: test
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          TEST_EMAIL: ${{ secrets.TEST_EMAIL }}
          TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      # 1Ô∏è‚É£1Ô∏è‚É£ Upload Playwright report
      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          retention-days: 30

      # 1Ô∏è‚É£2Ô∏è‚É£ Upload report to GitHub Pages
      - name: Upload Pages artifact
        if: always()
        uses: actions/upload-pages-artifact@v3
        with:
          path: playwright-report

      # 1Ô∏è‚É£3Ô∏è‚É£ Stop Next.js server
      - name: Stop Next.js server
        if: always()
        run: |
          if [ -f .next-server.pid ]; then
            kill $(cat .next-server.pid) || true
            rm .next-server.pid
          fi
          echo "üßæ Server log:"
          cat .next.log || true

  # 1Ô∏è‚É£4Ô∏è‚É£ Deploy Playwright report to GitHub Pages
  deploy:
    needs: test
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
